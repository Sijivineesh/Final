{"version":3,"file":"listemployees.component.js","sourceRoot":"","sources":["listemployees.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAqE;AAErE,0CAAyD;AACzD,8DAA4D;AAM5D,IAAa,sBAAsB;IAG/B,4EAA4E;IAC5E,gCAAoB,MAAsB,EAAU,OAAe,EAAU,gBAAmC;QAA5F,WAAM,GAAN,MAAM,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAmB;IAAI,CAAC;IAErH,yCAAQ,GAAR;QACG,IAAI,CAAC,YAAY,EAAE,CAAC;IAEvB,CAAC;IACD,6CAAY,GAAZ;QACI,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACvD,CAAC;IAED,uCAAM,GAAN,UAAO,UAAU;QAAjB,iBAOC;QANG,IAAI,GAAG,GAAG,OAAO,CAAC,0CAA0C,GAAG,UAAU,CAAC,CAAC;QAC3E,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC5D,KAAI,CAAC,YAAY,EAAE,CAAC;YACxB,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAA;QACrC,CAAC;IACL,CAAC;IACL,6BAAC;AAAD,CAAC,AAtBD,IAsBC;AArBY;IAAR,YAAK,EAAE;;yDAAwB;AADvB,sBAAsB;IALlC,gBAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,WAAW,EAAE,gCAAgC;KAEhD,CAAC;qCAK8B,uBAAc,EAAmB,eAAM,EAA6B,oCAAgB;GAJvG,sBAAsB,CAsBlC;AAtBY,wDAAsB;AAgC/B,gBAAgB;AAChB,8DAA8D;AAC9D,GAAG;AACH,aAAa;AACb,yDAAyD;AACzD,GAAG","sourcesContent":["import { Component, OnInit, OnChanges, Input  } from '@angular/core';\nimport { Employee } from '../app/Models/employee.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeServices } from '../app/employee.services';\n@Component({\n    selector: 'app-listemployees',\n    templateUrl: './listemployees.component.html',\n   \n})\nexport class ListEmployeesComponent implements OnInit {\n    @Input() employees: Employee [];\n    public empList: EmployeeData[]; \n    // @Output() notify: EventEmitter<Employee> = new EventEmitter<Employee >();\n    constructor(private _route: ActivatedRoute, private _Router: Router, private _EmployeeService : EmployeeServices) { }\n\n    ngOnInit() {\n       this.getEmployees();\r\n\n    }\n    getEmployees() {\n        this.employees=this._EmployeeService.getEmployee();\n    }\n\n    delete(employeeID) {\r\n        var ans = confirm(\"Do you want to delete customer with Id: \" + employeeID);\r\n        if (ans) {\r\n            this._EmployeeService.deleteEmployee(employeeID).subscribe((data) => {\r\n                this.getEmployees(); \r\n            }, error => console.error(error))\r\n        }\r\n    }\r\n}\r\n\r\ninterface EmployeeData {\r\n    id: number;\r\n    name: string;\r\n    gender: string;\r\n    department: string;\r\n    city: string;\r\n}\n   \n    //viewEmpoly() {\n    //    this._Router.navigate(['/employees', this.employee.id]);\n    //}\n    //editEmp() {\n    //    this._Router.navigate(['/edit', this.employee.id]);\n    //}\n\n\n"]}