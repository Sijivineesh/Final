{"version":3,"file":"createemployee.component.js","sourceRoot":"","sources":["createemployee.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm,FormGroup} from '@angular/forms';\nimport { Department } from './Models/department.model';\nimport { Employee } from './Models/employee.model';\n\nimport { EmployeeServices } from './employee.services';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-createemployee',\n    templateUrl: './createemployee.component.html',\n\n})\nexport class CreateEmployeeComponent implements OnInit {\n    //@ViewChild('employeeForm') public CreateEmployeeForm: NgForm;\n    CreateEmployeeForm: FormGroup;\n    dateofbirth: Date = new Date(2018, 0, 30);\n    photoPreview = false;\n    title: string = \"Create\";\n    errorMessage: any;\n\n    employee: Employee;\n    department: Department[] = [\n        { id: 1, name: 'IT' },\n        { id: 2, name: 'Accounting' },\n        { id: 3, name: 'HR' },\n        { id: 4, name: 'Payroll' }\n    ];\n    constructor(private _employeeservice: EmployeeServices,\n        private _routerService: Router, private _route: ActivatedRoute) {\n        // tslint:disable-next-line:max-line-length\n    }\n    togglePreview() {\n        this.photoPreview = !this.photoPreview;\n    }\n    ngOnInit() {\n        this._route.paramMap.subscribe(parametrMap => {\n            const id = +parametrMap.get('id');\n            this.getEmployee(id);\n        });\n    }\n    //EDIT\n    private getEmployee(id: number) {\n        if (id === 0) {\n            this.employee = {\n                id: null,\n                name: null,\n                gender: null,\n                city: null,\n                phoneno: null,\n                contactpreference: null,\n                dateofbirth: null,\n                department: null,\n                isactive: null,\n                photopath: null,\n                confirmpassword: null,\n                password: null\n            };\n        } else {\r\n            this.title = \"Edit\";\r\n            this._employeeservice.getEmployeeByID(id)\r\n                .subscribe(resp => this.CreateEmployeeForm.setValue(resp)\r\n                , error => this.errorMessage = error);\n        }\n    }\n    //SAVE\n    saveEmployee() {\r\n\r\n        if (!this.CreateEmployeeForm.valid) {\r\n            return;\r\n        }\r\n\r\n        if (this.title == \"Create\") {\r\n            this._employeeservice.saveEmployee(this.CreateEmployeeForm.value)\r\n                .subscribe((data) => {\r\n                    this._routerService.navigate(['/listemployees']);\r\n                }, error => this.errorMessage = error)\r\n        }\r\n        else if (this.title == \"Edit\") {\r\n            this._employeeservice.updateEmployee(this.CreateEmployeeForm.value)\r\n                .subscribe((data) => {\r\n                    this._routerService.navigate(['/listemployees']);\r\n                }, error => this.errorMessage = error)\r\n        }\r\n    }\n    cancel() {\r\n        this._routerService.navigate(['/listemployees']);\r\n    } \n}\n//  saveEmployee(): void {\n//    const newEmploy: Employee = Object.assign({}, this.employee);\n//      this._employeeservice.saveEmployee(newEmploy);\n//this._routerService.navigate(['listemployees']);\n//  to pass value to controls after saving\n// this.CreateEmployeeForm.reset({\n  // name: 'test name', gender: 'male'\n// });\n\n"]}